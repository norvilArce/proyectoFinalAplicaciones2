//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Win_Hunde.ProxyMedicina {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Medicina", Namespace="http://schemas.datacontract.org/2004/07/WCF_Hunde")]
    [System.SerializableAttribute()]
    public partial class Medicina : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short cod_medField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombre_medicinaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float precioField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short cod_med {
            get {
                return this.cod_medField;
            }
            set {
                if ((this.cod_medField.Equals(value) != true)) {
                    this.cod_medField = value;
                    this.RaisePropertyChanged("cod_med");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombre_medicina {
            get {
                return this.nombre_medicinaField;
            }
            set {
                if ((object.ReferenceEquals(this.nombre_medicinaField, value) != true)) {
                    this.nombre_medicinaField = value;
                    this.RaisePropertyChanged("nombre_medicina");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float precio {
            get {
                return this.precioField;
            }
            set {
                if ((this.precioField.Equals(value) != true)) {
                    this.precioField = value;
                    this.RaisePropertyChanged("precio");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProxyMedicina.IServicioMedicina")]
    public interface IServicioMedicina {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioMedicina/ConsultarMedicinaProveedor", ReplyAction="http://tempuri.org/IServicioMedicina/ConsultarMedicinaProveedorResponse")]
        Win_Hunde.ProxyMedicina.Medicina[] ConsultarMedicinaProveedor(string codProv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioMedicina/ConsultarMedicinaProveedor", ReplyAction="http://tempuri.org/IServicioMedicina/ConsultarMedicinaProveedorResponse")]
        System.Threading.Tasks.Task<Win_Hunde.ProxyMedicina.Medicina[]> ConsultarMedicinaProveedorAsync(string codProv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioMedicina/ListarMedicinas", ReplyAction="http://tempuri.org/IServicioMedicina/ListarMedicinasResponse")]
        Win_Hunde.ProxyMedicina.Medicina[] ListarMedicinas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioMedicina/ListarMedicinas", ReplyAction="http://tempuri.org/IServicioMedicina/ListarMedicinasResponse")]
        System.Threading.Tasks.Task<Win_Hunde.ProxyMedicina.Medicina[]> ListarMedicinasAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioMedicinaChannel : Win_Hunde.ProxyMedicina.IServicioMedicina, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioMedicinaClient : System.ServiceModel.ClientBase<Win_Hunde.ProxyMedicina.IServicioMedicina>, Win_Hunde.ProxyMedicina.IServicioMedicina {
        
        public ServicioMedicinaClient() {
        }
        
        public ServicioMedicinaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioMedicinaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioMedicinaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioMedicinaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Win_Hunde.ProxyMedicina.Medicina[] ConsultarMedicinaProveedor(string codProv) {
            return base.Channel.ConsultarMedicinaProveedor(codProv);
        }
        
        public System.Threading.Tasks.Task<Win_Hunde.ProxyMedicina.Medicina[]> ConsultarMedicinaProveedorAsync(string codProv) {
            return base.Channel.ConsultarMedicinaProveedorAsync(codProv);
        }
        
        public Win_Hunde.ProxyMedicina.Medicina[] ListarMedicinas() {
            return base.Channel.ListarMedicinas();
        }
        
        public System.Threading.Tasks.Task<Win_Hunde.ProxyMedicina.Medicina[]> ListarMedicinasAsync() {
            return base.Channel.ListarMedicinasAsync();
        }
    }
}
