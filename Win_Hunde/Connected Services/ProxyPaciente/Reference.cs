//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Win_Hunde.ProxyPaciente {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PacienteBE", Namespace="http://schemas.datacontract.org/2004/07/WCF_Hunde")]
    [System.SerializableAttribute()]
    public partial class PacienteBE : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short cod_colorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cod_pacField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short cod_razaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string colorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int est_pacField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime fec_nac_pacField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] fotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double longitudField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nom_pacField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string observacionesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double pesoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string razaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short sexoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string str_sexoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tipoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ult_vis_pacField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short cod_color {
            get {
                return this.cod_colorField;
            }
            set {
                if ((this.cod_colorField.Equals(value) != true)) {
                    this.cod_colorField = value;
                    this.RaisePropertyChanged("cod_color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cod_pac {
            get {
                return this.cod_pacField;
            }
            set {
                if ((object.ReferenceEquals(this.cod_pacField, value) != true)) {
                    this.cod_pacField = value;
                    this.RaisePropertyChanged("cod_pac");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short cod_raza {
            get {
                return this.cod_razaField;
            }
            set {
                if ((this.cod_razaField.Equals(value) != true)) {
                    this.cod_razaField = value;
                    this.RaisePropertyChanged("cod_raza");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string color {
            get {
                return this.colorField;
            }
            set {
                if ((object.ReferenceEquals(this.colorField, value) != true)) {
                    this.colorField = value;
                    this.RaisePropertyChanged("color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int est_pac {
            get {
                return this.est_pacField;
            }
            set {
                if ((this.est_pacField.Equals(value) != true)) {
                    this.est_pacField = value;
                    this.RaisePropertyChanged("est_pac");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime fec_nac_pac {
            get {
                return this.fec_nac_pacField;
            }
            set {
                if ((this.fec_nac_pacField.Equals(value) != true)) {
                    this.fec_nac_pacField = value;
                    this.RaisePropertyChanged("fec_nac_pac");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] foto {
            get {
                return this.fotoField;
            }
            set {
                if ((object.ReferenceEquals(this.fotoField, value) != true)) {
                    this.fotoField = value;
                    this.RaisePropertyChanged("foto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double longitud {
            get {
                return this.longitudField;
            }
            set {
                if ((this.longitudField.Equals(value) != true)) {
                    this.longitudField = value;
                    this.RaisePropertyChanged("longitud");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nom_pac {
            get {
                return this.nom_pacField;
            }
            set {
                if ((object.ReferenceEquals(this.nom_pacField, value) != true)) {
                    this.nom_pacField = value;
                    this.RaisePropertyChanged("nom_pac");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string observaciones {
            get {
                return this.observacionesField;
            }
            set {
                if ((object.ReferenceEquals(this.observacionesField, value) != true)) {
                    this.observacionesField = value;
                    this.RaisePropertyChanged("observaciones");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double peso {
            get {
                return this.pesoField;
            }
            set {
                if ((this.pesoField.Equals(value) != true)) {
                    this.pesoField = value;
                    this.RaisePropertyChanged("peso");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string raza {
            get {
                return this.razaField;
            }
            set {
                if ((object.ReferenceEquals(this.razaField, value) != true)) {
                    this.razaField = value;
                    this.RaisePropertyChanged("raza");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short sexo {
            get {
                return this.sexoField;
            }
            set {
                if ((this.sexoField.Equals(value) != true)) {
                    this.sexoField = value;
                    this.RaisePropertyChanged("sexo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string str_sexo {
            get {
                return this.str_sexoField;
            }
            set {
                if ((object.ReferenceEquals(this.str_sexoField, value) != true)) {
                    this.str_sexoField = value;
                    this.RaisePropertyChanged("str_sexo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tipo {
            get {
                return this.tipoField;
            }
            set {
                if ((object.ReferenceEquals(this.tipoField, value) != true)) {
                    this.tipoField = value;
                    this.RaisePropertyChanged("tipo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ult_vis_pac {
            get {
                return this.ult_vis_pacField;
            }
            set {
                if ((this.ult_vis_pacField.Equals(value) != true)) {
                    this.ult_vis_pacField = value;
                    this.RaisePropertyChanged("ult_vis_pac");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProxyPaciente.IServicioPaciente")]
    public interface IServicioPaciente {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPaciente/ConsultarPacientes", ReplyAction="http://tempuri.org/IServicioPaciente/ConsultarPacientesResponse")]
        Win_Hunde.ProxyPaciente.PacienteBE ConsultarPacientes(string strCodPaciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPaciente/ConsultarPacientes", ReplyAction="http://tempuri.org/IServicioPaciente/ConsultarPacientesResponse")]
        System.Threading.Tasks.Task<Win_Hunde.ProxyPaciente.PacienteBE> ConsultarPacientesAsync(string strCodPaciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPaciente/ConsultarPacientesPorRaza", ReplyAction="http://tempuri.org/IServicioPaciente/ConsultarPacientesPorRazaResponse")]
        Win_Hunde.ProxyPaciente.PacienteBE[] ConsultarPacientesPorRaza(short codRaza);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPaciente/ConsultarPacientesPorRaza", ReplyAction="http://tempuri.org/IServicioPaciente/ConsultarPacientesPorRazaResponse")]
        System.Threading.Tasks.Task<Win_Hunde.ProxyPaciente.PacienteBE[]> ConsultarPacientesPorRazaAsync(short codRaza);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPaciente/ConsultarPacientesPorTratamiento", ReplyAction="http://tempuri.org/IServicioPaciente/ConsultarPacientesPorTratamientoResponse")]
        Win_Hunde.ProxyPaciente.PacienteBE[] ConsultarPacientesPorTratamiento(short codTratamiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPaciente/ConsultarPacientesPorTratamiento", ReplyAction="http://tempuri.org/IServicioPaciente/ConsultarPacientesPorTratamientoResponse")]
        System.Threading.Tasks.Task<Win_Hunde.ProxyPaciente.PacienteBE[]> ConsultarPacientesPorTratamientoAsync(short codTratamiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPaciente/ListarPacientesDetallados", ReplyAction="http://tempuri.org/IServicioPaciente/ListarPacientesDetalladosResponse")]
        Win_Hunde.ProxyPaciente.PacienteBE[] ListarPacientesDetallados();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPaciente/ListarPacientesDetallados", ReplyAction="http://tempuri.org/IServicioPaciente/ListarPacientesDetalladosResponse")]
        System.Threading.Tasks.Task<Win_Hunde.ProxyPaciente.PacienteBE[]> ListarPacientesDetalladosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPaciente/ListarPacientes", ReplyAction="http://tempuri.org/IServicioPaciente/ListarPacientesResponse")]
        Win_Hunde.ProxyPaciente.PacienteBE[] ListarPacientes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPaciente/ListarPacientes", ReplyAction="http://tempuri.org/IServicioPaciente/ListarPacientesResponse")]
        System.Threading.Tasks.Task<Win_Hunde.ProxyPaciente.PacienteBE[]> ListarPacientesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPaciente/InsertarPaciente", ReplyAction="http://tempuri.org/IServicioPaciente/InsertarPacienteResponse")]
        bool InsertarPaciente(Win_Hunde.ProxyPaciente.PacienteBE pacienteBE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPaciente/InsertarPaciente", ReplyAction="http://tempuri.org/IServicioPaciente/InsertarPacienteResponse")]
        System.Threading.Tasks.Task<bool> InsertarPacienteAsync(Win_Hunde.ProxyPaciente.PacienteBE pacienteBE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPaciente/ActualizarPaciente", ReplyAction="http://tempuri.org/IServicioPaciente/ActualizarPacienteResponse")]
        bool ActualizarPaciente(Win_Hunde.ProxyPaciente.PacienteBE pacienteBE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPaciente/ActualizarPaciente", ReplyAction="http://tempuri.org/IServicioPaciente/ActualizarPacienteResponse")]
        System.Threading.Tasks.Task<bool> ActualizarPacienteAsync(Win_Hunde.ProxyPaciente.PacienteBE pacienteBE);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioPacienteChannel : Win_Hunde.ProxyPaciente.IServicioPaciente, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioPacienteClient : System.ServiceModel.ClientBase<Win_Hunde.ProxyPaciente.IServicioPaciente>, Win_Hunde.ProxyPaciente.IServicioPaciente {
        
        public ServicioPacienteClient() {
        }
        
        public ServicioPacienteClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioPacienteClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioPacienteClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioPacienteClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Win_Hunde.ProxyPaciente.PacienteBE ConsultarPacientes(string strCodPaciente) {
            return base.Channel.ConsultarPacientes(strCodPaciente);
        }
        
        public System.Threading.Tasks.Task<Win_Hunde.ProxyPaciente.PacienteBE> ConsultarPacientesAsync(string strCodPaciente) {
            return base.Channel.ConsultarPacientesAsync(strCodPaciente);
        }
        
        public Win_Hunde.ProxyPaciente.PacienteBE[] ConsultarPacientesPorRaza(short codRaza) {
            return base.Channel.ConsultarPacientesPorRaza(codRaza);
        }
        
        public System.Threading.Tasks.Task<Win_Hunde.ProxyPaciente.PacienteBE[]> ConsultarPacientesPorRazaAsync(short codRaza) {
            return base.Channel.ConsultarPacientesPorRazaAsync(codRaza);
        }
        
        public Win_Hunde.ProxyPaciente.PacienteBE[] ConsultarPacientesPorTratamiento(short codTratamiento) {
            return base.Channel.ConsultarPacientesPorTratamiento(codTratamiento);
        }
        
        public System.Threading.Tasks.Task<Win_Hunde.ProxyPaciente.PacienteBE[]> ConsultarPacientesPorTratamientoAsync(short codTratamiento) {
            return base.Channel.ConsultarPacientesPorTratamientoAsync(codTratamiento);
        }
        
        public Win_Hunde.ProxyPaciente.PacienteBE[] ListarPacientesDetallados() {
            return base.Channel.ListarPacientesDetallados();
        }
        
        public System.Threading.Tasks.Task<Win_Hunde.ProxyPaciente.PacienteBE[]> ListarPacientesDetalladosAsync() {
            return base.Channel.ListarPacientesDetalladosAsync();
        }
        
        public Win_Hunde.ProxyPaciente.PacienteBE[] ListarPacientes() {
            return base.Channel.ListarPacientes();
        }
        
        public System.Threading.Tasks.Task<Win_Hunde.ProxyPaciente.PacienteBE[]> ListarPacientesAsync() {
            return base.Channel.ListarPacientesAsync();
        }
        
        public bool InsertarPaciente(Win_Hunde.ProxyPaciente.PacienteBE pacienteBE) {
            return base.Channel.InsertarPaciente(pacienteBE);
        }
        
        public System.Threading.Tasks.Task<bool> InsertarPacienteAsync(Win_Hunde.ProxyPaciente.PacienteBE pacienteBE) {
            return base.Channel.InsertarPacienteAsync(pacienteBE);
        }
        
        public bool ActualizarPaciente(Win_Hunde.ProxyPaciente.PacienteBE pacienteBE) {
            return base.Channel.ActualizarPaciente(pacienteBE);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarPacienteAsync(Win_Hunde.ProxyPaciente.PacienteBE pacienteBE) {
            return base.Channel.ActualizarPacienteAsync(pacienteBE);
        }
    }
}
